services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: moms_milk_mysql_dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password123}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-moms_milk}
      MYSQL_USER: ${MYSQL_USER:-app_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-app_password}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql-init:/docker-entrypoint-initdb.d
    networks:
      - moms_milk_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-password123}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # NestJS API - Development with Hot Reload
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: development
    container_name: moms_milk_api_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: "mysql://root:${MYSQL_ROOT_PASSWORD:-password123}@mysql:3306/${MYSQL_DATABASE:-moms_milk}"
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      DEFAULT_OTP: ${DEFAULT_OTP:-759409}
      SMTP_HOST: ${SMTP_HOST:-}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASS: ${SMTP_PASS:-}
    ports:
      - "${API_PORT:-3000}:3000"
      - "9229:9229" # Debug port
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - ./src/data:/usr/src/app/src/data
    networks:
      - moms_milk_network
    depends_on:
      mysql:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        rm -rf node_modules/.prisma &&
        rm -rf node_modules/@prisma/client &&
        npx prisma generate &&
        echo 'Pushing database schema...' &&
        npx prisma db push --accept-data-loss &&
        echo 'Database setup complete. Starting application...' &&
        npm run start:debug
      "

  # Redis for caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: moms_milk_redis_dev
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - moms_milk_network
    profiles:
      - cache

  # Adminer (Database Management)
  adminer:
    image: adminer:4.8.1
    container_name: moms_milk_adminer_dev
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    networks:
      - moms_milk_network
    depends_on:
      - mysql

  # Prisma Studio (Database UI)
  prisma-studio:
    build:
      context: .
      dockerfile: docker/Dockerfile
      target: development
    container_name: moms_milk_prisma_studio_dev
    restart: unless-stopped
    environment:
      DATABASE_URL: "mysql://root:${MYSQL_ROOT_PASSWORD:-password123}@mysql:3306/${MYSQL_DATABASE:-moms_milk}"
    ports:
      - "${PRISMA_STUDIO_PORT:-5555}:5555"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - moms_milk_network
    depends_on:
      mysql:
        condition: service_healthy
    command: >
      sh -c "
        npx prisma generate &&
        npx prisma studio --hostname 0.0.0.0
      "
    profiles:
      - db-tools

volumes:
  mysql_data:
    driver: local

networks:
  moms_milk_network:
    driver: bridge
